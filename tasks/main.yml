---

- name: Sending Ping to DNS host
  ping:

# Uses magic variables to test list of active hosts Vs total hosts targeted by the play
- name: Checking all targeted DNS hosts
  run_once: yes
  assert:
    that:
      - ansible_play_hosts == ansible_play_hosts_all
    msg: "Some of the targeted DNS hosts could not be reached"

- name: Include OS specific variables
  include_vars: "{{ ansible_os_family|lower }}.yml"

- name: Installing and configuring firewalld for DNS service
  import_tasks: 'firewalld.yml'
  when:
  - firewalld|bool

- name: Installing {{ bind_package }} package
  yum:
    name: "{{ bind_package }}"
    state: present


- name: Creating forward zones
  template:
    src: "forward.zone.j2"
    dest: "/var/named/data/{{ item.value.zone_file }}"
#    dest: "/tmp/{{ item.value.zone_file }}"
    backup: 'no'
    mode: 'u=rw,g=r,o=-'
    owner: 'root'
    group: 'named'
    validate: '/usr/sbin/named-checkzone -q -i full {{ item.value.zone_file }} %s'
  loop: "{{ lookup('dict',forward_zones, wantlist=True) }}"
  vars:
    fz: "{{item}}"
  notify:
  - Restart BIND9 daemon


- name: Creating reverse zones
  template:
    src: "reverse.zone.j2"
    dest: "/var/named/data/{{ item.value.zone_file }}"
#   dest: "/tmp/{{ item.value.zone_file }}"
    backup: 'no'
    mode: 'u=rw,g=r,o=-'
    owner: 'root'
    group: 'named'
    validate: '/usr/sbin/named-checkzone -q -i full {{ item.value.zone_file }} %s'
  loop: "{{ lookup('dict',reverse_zones, wantlist=True) }}"
  vars:
    rz: "{{item}}"
  notify:
  - Restart BIND9 daemon


- name: Creating BIND9 config (/etc/named.conf)
  template:
    src: named.conf.j2
    dest: '/etc/named.conf'
#    dest: '/tmp/named.conf'
    backup: 'no'
    mode: 'u=rw,g=r,o=-'
    owner: 'root'
    group: 'named'
    validate: '/usr/sbin/named-checkconf -z -j %s'
  notify: 
  - Restart BIND9 daemon

...
